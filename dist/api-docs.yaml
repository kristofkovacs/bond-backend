swagger: "2.0"

info:
  version: 1.0.0
  title: BOND API
  description: API to do serve the clients of our badass new product.

schemes:
  - http
host: localhost
basePath: /

paths:
  /login:
    post:
      summary: Validates the given credentials, and returns with the user, if it exists.
      description: Returns the user object, if it exists.
      parameters:
       - name: email
         in: query
         description: Email address of the user.
         type: string
       - name: password
         in: query
         description: The password of the user.
         type: string
      responses:
        200:
          description: A User Object
          schema:
            $ref: "#/definitions/User"
        404:
          description: User not found
        500:
          description: Server error

  /sign-up:
    post:
      summary: Saves the credentials of a new user.
      description: Returns the user object, if it exists.
      parameters:
       - name: email
         in: query
         description: Email address of the user.
         type: string
       - name: password
         in: query
         description: The password of the user.
         type: string
       - name: name
         in: query
         description: The name of the user.
         type: string
       - name: preferredCategories
         in: query
         description: The selected preferred categories of the user.
         type: string array
      responses:
        200:
          description: A User Object
          schema:
            $ref: "#/definitions/User" 
        400:
          description: User already exists.
        500:
          description: Server error

  /category:
    post:
      summary: Posts a new category.
      description: Returns the Category object.
      parameters: 
       - name: name
         in: query
         required: true
         description: The name of the category.
         type: string
       - name: thumbnail_url
         in: query
         description: The url of the category's picture.
         type: string
      responses:
        200:
          description: A category object
          schema:
            $ref: "#/definitions/Category"
        500:
          description: Server error
    get:
      summary: Returns every category stored in the database.
      responses:
        200:
          description: A list of category objects
          schema:
            type: array
            items:
              $ref: "#/definitions/Category"
        500:
          description: Server error
  /category/{id}:
    get:
      summary: Returns a category for it's id.
      parameters:
        - name: id
          in: path
          required: true
          description: The category's id.
          type: string
      responses:
        200:
          description: A Category Object
          schema:
            $ref: "#/definitions/Category"
        404:
          description: Category not found
        500:
          description: Server error

definitions:
  User:
    required:
      - email
      - password
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string
      password:
        type: string
      preferredCategories:
        type: string
  
  Category:
    required:
      - name
    properties:
      _id:
        type: string
      name:
        type: string
      thumbnail_url:
        type: string
